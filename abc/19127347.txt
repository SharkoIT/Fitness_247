<<<<<<< Updated upstream
Q1:
Generally, the most non-functional requirements for design system architecture as follows:
- Performance
- Safety
- Security
- Availability
- Maintainability
While design an architecture, it may arise conflicts in security and availability requirement cases in above non-functional requirements, the reason are:
- The system architecture disturbs the robustness, maintainability and performance of a system.
The particular style and structure preferred for an application may consequently depend on these requirements.
- In Security requirement, the architecture must be used layered structure in a security requirement.
It is an extraordinary level of security validation applied to these layers.
- In availability requirement, the architecture must be considered to terminate components and so that it is
probable to change and edit components without preventing the system.
- The security and availability are critical requirements. But the major architectural conflict occurred between replication
and several copies in availability requirement and security requirement conflict occurred between specialization and minimal copies.
So, design conflicts might arise whether a layered structure or redundant components are used when designing an architecture.

==> Availability and security requirements are the most important non-functional requirements.

Q2:
The architecture needed for this type of system is a client-server model.
iTunes will have a database that has records on all the music that is available through their system.
These music records can be searched for by the user by artist name, genre, etc., through a
web based interface and downloaded for a certain price. The server handles music orders through the web based interface.
==> The architectural pattern that is the basis for this is client-server pattern.
=======
Kiều Hải Đăng
>>>>>>> Stashed changes
